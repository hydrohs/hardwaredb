# Generated by Django 4.2.7 on 2023-12-08 13:31

from django.db import migrations, models
import django.db.models.deletion
import hardware.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('choices', '__first__'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Hardware',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand', models.CharField(blank=True, max_length=200, null=True)),
                ('model', models.CharField(blank=True, max_length=200, null=True)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_%(app_label)s.%(class)s_set+', to='contenttypes.contenttype')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='SBC',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=200)),
                ('model', models.CharField(max_length=200)),
                ('qty', models.IntegerField(default=1)),
                ('usage', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Single-board Computer',
                'verbose_name_plural': 'Single-board Computers',
            },
        ),
        migrations.CreateModel(
            name='Micro',
            fields=[
                ('hardware_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='hardware.hardware')),
            ],
            options={
                'verbose_name': 'Microcomputer',
                'verbose_name_plural': 'Microcomputers',
            },
            bases=('hardware.hardware',),
        ),
        migrations.CreateModel(
            name='System',
            fields=[
                ('hardware_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='hardware.hardware')),
                ('os', models.CharField(max_length=64, verbose_name='OS')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('hardware.hardware',),
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('image', models.ImageField(upload_to=hardware.models.get_upload_path)),
                ('part', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='hardware.hardware')),
            ],
        ),
        migrations.CreateModel(
            name='Proprietary',
            fields=[
                ('system_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='hardware.system')),
            ],
            options={
                'verbose_name': 'Proprietary System',
                'verbose_name_plural': 'Proprietary Systems',
            },
            bases=('hardware.system',),
        ),
        migrations.CreateModel(
            name='SoundCard',
            fields=[
                ('hardware_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='hardware.hardware')),
                ('sb', models.CharField(max_length=200, verbose_name='SB Compatibility')),
                ('installed_in', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='soundcards', to='hardware.system')),
                ('interface', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='choices.slot')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('hardware.hardware',),
        ),
        migrations.CreateModel(
            name='RAM',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.IntegerField(verbose_name='Size (MB)')),
                ('speed', models.IntegerField(verbose_name='Speed (ns or MHz)')),
                ('ecc', models.BooleanField(verbose_name='ECC')),
                ('interface', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='choices.raminterface')),
                ('type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='choices.ramtype')),
                ('installed_in', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ram', to='hardware.system')),
            ],
            options={
                'verbose_name': 'RAM',
                'verbose_name_plural': 'RAM',
            },
        ),
        migrations.CreateModel(
            name='PSU',
            fields=[
                ('hardware_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='hardware.hardware')),
                ('wattage', models.IntegerField()),
                ('minus5v', models.BooleanField(verbose_name='-5v rail')),
                ('molex', models.IntegerField(default=0, verbose_name='Molex Connectors')),
                ('floppy', models.IntegerField(default=0, verbose_name='Floppy Connectors')),
                ('sata', models.IntegerField(default=0, verbose_name='SATA Connectors')),
                ('cpu4pin', models.IntegerField(default=0, verbose_name='4-pin CPU Connectors')),
                ('cpu8pin', models.IntegerField(default=0, verbose_name='8-pin CPU Connectors')),
                ('pcie6pin', models.IntegerField(default=0, verbose_name='6-pin PCIe Connectors')),
                ('pcie8pin', models.IntegerField(default=0, verbose_name='8-pin PCIe Connectors')),
                ('installed_in', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='psu', to='hardware.system')),
                ('spec', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='choices.psuspec')),
            ],
            options={
                'verbose_name': 'PSU',
                'verbose_name_plural': 'PSUs',
            },
            bases=('hardware.hardware',),
        ),
        migrations.CreateModel(
            name='Peripheral',
            fields=[
                ('hardware_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='hardware.hardware')),
                ('ports', models.ManyToManyField(blank=True, to='choices.port')),
                ('type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='choices.peripheraltype')),
            ],
            options={
                'verbose_name': 'Perhipheral',
                'verbose_name_plural': 'Peripherals',
            },
            bases=('hardware.hardware',),
        ),
        migrations.CreateModel(
            name='NIC',
            fields=[
                ('hardware_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='hardware.hardware')),
                ('wireless', models.BooleanField()),
                ('aui', models.IntegerField(default=0, verbose_name='AUI Ports')),
                ('bnc', models.IntegerField(default=0, verbose_name='BNC Ports')),
                ('tp', models.IntegerField(default=0, verbose_name='Ethernet Ports')),
                ('installed_in', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='nics', to='hardware.system')),
                ('interface', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='choices.slot')),
                ('speed', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='choices.netspeed')),
            ],
            options={
                'verbose_name': 'NIC',
                'verbose_name_plural': 'NICs',
            },
            bases=('hardware.hardware',),
        ),
        migrations.CreateModel(
            name='Motherboard',
            fields=[
                ('hardware_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='hardware.hardware')),
                ('socket', models.CharField(max_length=200)),
                ('isa', models.IntegerField(default=0, verbose_name='8-bit ISA Slots')),
                ('isa16', models.IntegerField(default=0, verbose_name='16-bit ISA Slots')),
                ('vlb', models.IntegerField(default=0, verbose_name='VLB Slots')),
                ('pci', models.IntegerField(default=0, verbose_name='PCI Slots')),
                ('agp', models.IntegerField(default=0, verbose_name='AGP Slots')),
                ('pcie1', models.IntegerField(default=0, verbose_name='PCIe x1 Slots')),
                ('pcie4', models.IntegerField(default=0, verbose_name='PCIe x4 Slots')),
                ('pcie8', models.IntegerField(default=0, verbose_name='PCIe x8 Slots')),
                ('pcie16', models.IntegerField(default=0, verbose_name='PCIe x16 Slots')),
                ('ram', models.IntegerField(default=0, verbose_name='RAM Slots')),
                ('form_factor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='choices.formfactor')),
                ('installed_in', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='motherboard', to='hardware.system')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('hardware.hardware',),
        ),
        migrations.CreateModel(
            name='GPU',
            fields=[
                ('hardware_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='hardware.hardware')),
                ('gpu_brand', models.CharField(max_length=32, verbose_name='GPU')),
                ('mda', models.IntegerField(default=0, verbose_name='MDA Ports')),
                ('cga', models.IntegerField(default=0, verbose_name='CGA Ports')),
                ('composite', models.IntegerField(default=0, verbose_name='Composite Ports')),
                ('vga', models.IntegerField(default=0, verbose_name='VGA Ports')),
                ('svideo', models.IntegerField(default=0, verbose_name='S-Video Ports')),
                ('component', models.IntegerField(default=0, verbose_name='Component Ports')),
                ('dvi', models.IntegerField(default=0, verbose_name='DVI Ports')),
                ('hdmi', models.IntegerField(default=0, verbose_name='HDMI Ports')),
                ('minihdmi', models.IntegerField(default=0, verbose_name='Mini HDMI Ports')),
                ('microhdmi', models.IntegerField(default=0, verbose_name='Micro HDMI Ports')),
                ('dp', models.IntegerField(default=0, verbose_name='Displayport Ports')),
                ('minidp', models.IntegerField(default=0, verbose_name='Mini DisplayPort Ports')),
                ('other', models.IntegerField(default=0, verbose_name='Other Ports (Use notes)')),
                ('installed_in', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='gpus', to='hardware.system')),
                ('interface', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='choices.slot')),
            ],
            options={
                'verbose_name': 'GPU',
                'verbose_name_plural': 'GPUs',
            },
            bases=('hardware.hardware',),
        ),
        migrations.CreateModel(
            name='ExpansionCard',
            fields=[
                ('hardware_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='hardware.hardware')),
                ('io_panel', models.CharField(blank=True, max_length=255, null=True, verbose_name='IO Panel (comma separated)')),
                ('installed_in', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='expansioncards', to='hardware.system')),
                ('interface', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='choices.slot')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('hardware.hardware',),
        ),
        migrations.CreateModel(
            name='Drive',
            fields=[
                ('hardware_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='hardware.hardware')),
                ('capacity', models.IntegerField(blank=True, null=True, verbose_name='Capacity (MB)')),
                ('internal', models.BooleanField(default=False)),
                ('installed_in', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='drives', to='hardware.system')),
                ('interface', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='choices.driveinterface')),
                ('type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='choices.drivetype')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('hardware.hardware',),
        ),
        migrations.CreateModel(
            name='CPU',
            fields=[
                ('hardware_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='hardware.hardware')),
                ('speed', models.IntegerField()),
                ('socket', models.CharField(max_length=200)),
                ('cores', models.IntegerField()),
                ('hyperthreading', models.BooleanField()),
                ('cpu_world', models.TextField(blank=True, null=True)),
                ('installed_in', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cpus', to='hardware.system')),
            ],
            options={
                'verbose_name': 'CPU',
                'verbose_name_plural': 'CPUs',
            },
            bases=('hardware.hardware',),
        ),
        migrations.CreateModel(
            name='Case',
            fields=[
                ('hardware_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='hardware.hardware')),
                ('installed_in', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='case', to='hardware.system')),
                ('mb_support', models.ManyToManyField(to='choices.formfactor', verbose_name='Motherboard Compatibility')),
            ],
            options={
                'verbose_name': 'Case',
            },
            bases=('hardware.hardware',),
        ),
        migrations.CreateModel(
            name='Cable',
            fields=[
                ('hardware_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='hardware.hardware')),
                ('quantity', models.IntegerField(default=1)),
                ('connectors_a', models.ManyToManyField(related_name='cable_a', to='choices.port', verbose_name='Connector(s) (A Side)')),
                ('connectors_b', models.ManyToManyField(related_name='cable_b', to='choices.port', verbose_name='Connector(s) (B Side)')),
                ('type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='choices.cabletype')),
            ],
            options={
                'verbose_name': 'Cable, Adapter, I/O Bracket',
                'verbose_name_plural': 'Cables, Adapters, IO Brackets',
            },
            bases=('hardware.hardware',),
        ),
    ]
